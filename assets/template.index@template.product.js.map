{"version":3,"sources":["webpack:///../node_modules/@shopify/theme-currency/dist/currency.cjs.js","webpack:///../node_modules/@shopify/theme-product-form/listeners.js","webpack:///../node_modules/@shopify/theme-product/theme-product.js","webpack:///../node_modules/@shopify/theme-product-form/theme-product-form.js","webpack:///../node_modules/@shopify/theme-sections/section.js","webpack:///../node_modules/@shopify/theme-sections/theme-sections.js","webpack:///./scripts/sections/product.js"],"names":["Object","defineProperty","exports","value","formatMoney","cents","format","replace","placeholderRegex","formatString","moneyFormat","formatWithDelimiters","number","precision","arguments","length","thousands","decimal","isNaN","parts","toFixed","split","dollarsAmount","centsAmount","match","Listeners","this","entries","_validateProductStructure","product","TypeError","keys","constructor","Error","prototype","add","element","event","fn","push","addEventListener","removeAll","filter","listener","removeEventListener","selectors","getUrlWithVariant","url","id","test","concat","ProductForm","options","variants","_listeners","_onSubmit","bind","optionInputs","_initInputs","onOptionChange","quantityInputs","onQuantityChange","propertyInputs","onPropertyChange","_serializeInputValues","inputs","transform","reduce","input","checked","type","name","destroy","item","exec","variant","collection","Array","isArray","every","option","index","hasOwnProperty","optionArray","forEach","i","toLowerCase","getVariantFromSerializedArray","properties","quantity","Number","parseInt","_setIdInputValue","idInputElement","querySelector","document","createElement","appendChild","toString","dataset","_getProductFormEventData","onFormSubmit","_onFormEvent","cb","Function","selector","slice","call","querySelectorAll","map","SECTION_ID_ATTR","Section","container","Element","getAttribute","extensions","assign","onLoad","onUnload","onSelect","onDeselect","onBlockSelect","onBlockDeselect","extend","extension","extensionClone","init","apply","target","varArgs","to","nextSource","nextKey","writable","configurable","SECTION_TYPE_ATTR","window","Shopify","theme","sections","registered","instances","register","TypedSection","create","unregister","types","normalizeType","load","containers","normalizeContainers","isInstance","unload","getInstances","instance","e","indexOf","splice","filteredInstances","NodeList","isPrototypeOf","firstElement","getInstanceById","designMode","detail","sectionId","blockId","_regenerator2","_interopRequireDefault","__webpack_require__","_asyncToGenerator3","_themeProductForm","_themeCurrency","_themeSections","_themeA11y","obj","__esModule","default","classes","submitButton","submitButtonText","comparePrice","comparePriceText","priceWrapper","imageWrapper","visibleImageWrapper","imageWrapperById","productForm","productPrice","thumbnail","thumbnailById","thumbnailActive","_this","mark","_callee","productFormElement","wrap","_context","prev","next","getProductJson","productHandle","sent","onFormOptionChange","onThumbnailClick","onThumbnailKeyup","stop","handle","fetch","then","response","json","renderImages","renderPrice","renderComparePrice","renderSubmitButton","updateBrowserHistory","closest","preventDefault","renderFeaturedImage","thumbnailId","renderActiveThumbnail","keyCode","visibleFeaturedImageWrapper","forceFocus","available","disabled","innerText","strings","addToCart","soldOut","unavailable","featured_image","priceElement","classList","toggle","price","comparePriceElement","compareTextElement","compare_at_price","remove","activeThumbnail","inactiveThumbnail","removeAttribute","setAttribute","activeImage","inactiveImage","enableHistoryState","location","href","history","replaceState","path"],"mappings":"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","file":"template.index@template.product.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatMoney = formatMoney;\n/**\n * Currency Helpers\n * -----------------------------------------------------------------------------\n * A collection of useful functions that help with currency formatting\n *\n * Current contents\n * - formatMoney - Takes an amount in cents and returns it as a formatted dollar value.\n *\n */\n\nvar moneyFormat = '${{amount}}';\n\n/**\n * Format money values based on your shop currency settings\n * @param  {Number|string} cents - value in cents or dollar amount e.g. 300 cents\n * or 3.00 dollars\n * @param  {String} format - shop money_format setting\n * @return {String} value - formatted value\n */\nfunction formatMoney(cents, format) {\n  if (typeof cents === 'string') {\n    cents = cents.replace('.', '');\n  }\n  var value = '';\n  var placeholderRegex = /\\{\\{\\s*(\\w+)\\s*\\}\\}/;\n  var formatString = format || moneyFormat;\n\n  function formatWithDelimiters(number) {\n    var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    var thousands = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';\n    var decimal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n\n    if (isNaN(number) || number == null) {\n      return 0;\n    }\n\n    number = (number / 100.0).toFixed(precision);\n\n    var parts = number.split('.');\n    var dollarsAmount = parts[0].replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1' + thousands);\n    var centsAmount = parts[1] ? decimal + parts[1] : '';\n\n    return dollarsAmount + centsAmount;\n  }\n\n  switch (formatString.match(placeholderRegex)[1]) {\n    case 'amount':\n      value = formatWithDelimiters(cents, 2);\n      break;\n    case 'amount_no_decimals':\n      value = formatWithDelimiters(cents, 0);\n      break;\n    case 'amount_with_comma_separator':\n      value = formatWithDelimiters(cents, 2, '.', ',');\n      break;\n    case 'amount_no_decimals_with_comma_separator':\n      value = formatWithDelimiters(cents, 0, '.', ',');\n      break;\n  }\n\n  return formatString.replace(placeholderRegex, value);\n}\n","export default function Listeners() {\n  this.entries = [];\n}\n\nListeners.prototype.add = function(element, event, fn) {\n  this.entries.push({ element: element, event: event, fn: fn });\n  element.addEventListener(event, fn);\n};\n\nListeners.prototype.removeAll = function() {\n  this.entries = this.entries.filter(function(listener) {\n    listener.element.removeEventListener(listener.event, listener.fn);\n    return false;\n  });\n};\n","/**\n * Find a match in the project JSON (using a ID number) and return the variant (as an Object)\n * @param {Object} product Product JSON object\n * @param {Number} value Accepts Number (e.g. 6908023078973)\n * @returns {Object} The variant object once a match has been successful. Otherwise null will be return\n */\nexport function getVariantFromId(product, value) {\n  _validateProductStructure(product);\n\n  if (typeof value !== 'number') {\n    throw new TypeError(value + ' is not a Number.');\n  }\n\n  var result = product.variants.filter(function(variant) {\n    return variant.id === value;\n  });\n\n  return result[0] || null;\n}\n\n/**\n * Convert the Object (with 'name' and 'value' keys) into an Array of values, then find a match & return the variant (as an Object)\n * @param {Object} product Product JSON object\n * @param {Object} collection Object with 'name' and 'value' keys (e.g. [{ name: \"Size\", value: \"36\" }, { name: \"Color\", value: \"Black\" }])\n * @returns {Object || null} The variant object once a match has been successful. Otherwise null will be returned\n */\nexport function getVariantFromSerializedArray(product, collection) {\n  _validateProductStructure(product);\n\n  // If value is an array of options\n  var optionArray = _createOptionArrayFromOptionCollection(product, collection);\n  return getVariantFromOptionArray(product, optionArray);\n}\n\n/**\n * Find a match in the project JSON (using Array with option values) and return the variant (as an Object)\n * @param {Object} product Product JSON object\n * @param {Array} options List of submitted values (e.g. ['36', 'Black'])\n * @returns {Object || null} The variant object once a match has been successful. Otherwise null will be returned\n */\nexport function getVariantFromOptionArray(product, options) {\n  _validateProductStructure(product);\n  _validateOptionsArray(options);\n\n  var result = product.variants.filter(function(variant) {\n    return options.every(function(option, index) {\n      return variant.options[index] === option;\n    });\n  });\n\n  return result[0] || null;\n}\n\n/**\n * Creates an array of selected options from the object\n * Loops through the project.options and check if the \"option name\" exist (product.options.name) and matches the target\n * @param {Object} product Product JSON object\n * @param {Array} collection Array of object (e.g. [{ name: \"Size\", value: \"36\" }, { name: \"Color\", value: \"Black\" }])\n * @returns {Array} The result of the matched values. (e.g. ['36', 'Black'])\n */\nfunction _createOptionArrayFromOptionCollection(product, collection) {\n  _validateProductStructure(product);\n  _validateSerializedArray(collection);\n\n  var optionArray = [];\n\n  collection.forEach(function(option) {\n    for (var i = 0; i < product.options.length; i++) {\n      if (product.options[i].name.toLowerCase() === option.name.toLowerCase()) {\n        optionArray[i] = option.value;\n        break;\n      }\n    }\n  });\n\n  return optionArray;\n}\n\n/**\n * Check if the product data is a valid JS object\n * Error will be thrown if type is invalid\n * @param {Array} product Product JSON object\n */\nfunction _validateProductStructure(product) {\n  if (typeof product !== 'object') {\n    throw new TypeError(product + 'is not an object.');\n  }\n\n  if (Object.keys(product).length === 0 && product.constructor === Object) {\n    throw new Error(product + 'is empty.');\n  }\n}\n\n/**\n * Validate the structure of the array\n * It must be formatted like jQuery's serializeArray()\n * @param {Array} collection Array of object [{ name: \"Size\", value: \"36\" }, { name: \"Color\", value: \"Black\" }]\n */\nfunction _validateSerializedArray(collection) {\n  if (!Array.isArray(collection)) {\n    throw new TypeError(collection + 'is not an array.');\n  }\n\n  if (collection.length === 0) {\n    throw new Error(collection + 'is empty.');\n  }\n\n  if (collection[0].hasOwnProperty('name')) {\n    if (typeof collection[0].name !== 'string') {\n      throw new TypeError(\n        'Invalid value type passed for name of option ' +\n          collection[0].name +\n          '. Value should be string.'\n      );\n    }\n  } else {\n    throw new Error(collection[0] + 'does not contain name key.');\n  }\n}\n\n/**\n * Validate the structure of the array\n * It must be formatted as list of values\n * @param {Array} collection Array of object (e.g. ['36', 'Black'])\n */\nfunction _validateOptionsArray(options) {\n  if (Array.isArray(options) && typeof options[0] === 'object') {\n    throw new Error(options + 'is not a valid array of options.');\n  }\n}\n","import Listeners from './listeners';\nimport { getVariantFromSerializedArray } from '@shopify/theme-product';\n\nvar selectors = {\n  idInput: '[name=\"id\"]',\n  optionInput: '[name^=\"options\"]',\n  quantityInput: '[name=\"quantity\"]',\n  propertyInput: '[name^=\"properties\"]'\n};\n\n// Public Methods\n// -----------------------------------------------------------------------------\n\n/**\n * Returns a URL with a variant ID query parameter. Useful for updating window.history\n * with a new URL based on the currently select product variant.\n * @param {string} url - The URL you wish to append the variant ID to\n * @param {number} id  - The variant ID you wish to append to the URL\n * @returns {string} - The new url which includes the variant ID query parameter\n */\n\nexport function getUrlWithVariant(url, id) {\n  if (/variant=/.test(url)) {\n    return url.replace(/(variant=)[^&]+/, '$1' + id);\n  } else if (/\\?/.test(url)) {\n    return url.concat('&variant=').concat(id);\n  }\n\n  return url.concat('?variant=').concat(id);\n}\n\n/**\n * Constructor class that creates a new instance of a product form controller.\n *\n * @param {Element} element - DOM element which is equal to the <form> node wrapping product form inputs\n * @param {Object} product - A product object\n * @param {Object} options - Optional options object\n * @param {Function} options.onOptionChange - Callback for whenever an option input changes\n * @param {Function} options.onQuantityChange - Callback for whenever an quantity input changes\n * @param {Function} options.onPropertyChange - Callback for whenever a property input changes\n * @param {Function} options.onFormSubmit - Callback for whenever the product form is submitted\n */\nexport function ProductForm(element, product, options) {\n  this.element = element;\n  this.product = _validateProductObject(product);\n\n  options = options || {};\n\n  this._listeners = new Listeners();\n  this._listeners.add(\n    this.element,\n    'submit',\n    this._onSubmit.bind(this, options)\n  );\n\n  this.optionInputs = this._initInputs(\n    selectors.optionInput,\n    options.onOptionChange\n  );\n\n  this.quantityInputs = this._initInputs(\n    selectors.quantityInput,\n    options.onQuantityChange\n  );\n\n  this.propertyInputs = this._initInputs(\n    selectors.propertyInput,\n    options.onPropertyChange\n  );\n}\n\n/**\n * Cleans up all event handlers that were assigned when the Product Form was constructed.\n * Useful for use when a section needs to be reloaded in the theme editor.\n */\nProductForm.prototype.destroy = function() {\n  this._listeners.removeAll();\n};\n\n/**\n * Getter method which returns the array of currently selected option values\n *\n * @returns {Array} An array of option values\n */\nProductForm.prototype.options = function() {\n  return _serializeInputValues(this.optionInputs, function(item) {\n    var regex = /(?:^(options\\[))(.*?)(?:\\])/;\n    item.name = regex.exec(item.name)[2]; // Use just the value between 'options[' and ']'\n    return item;\n  });\n};\n\n/**\n * Getter method which returns the currently selected variant, or `null` if variant\n * doesn't exist.\n *\n * @returns {Object|null} Variant object\n */\nProductForm.prototype.variant = function() {\n  return getVariantFromSerializedArray(this.product, this.options());\n};\n\n/**\n * Getter method which returns a collection of objects containing name and values\n * of property inputs\n *\n * @returns {Array} Collection of objects with name and value keys\n */\nProductForm.prototype.properties = function() {\n  return _serializeInputValues(this.propertyInputs, function(item) {\n    var regex = /(?:^(properties\\[))(.*?)(?:\\])/;\n    item.name = regex.exec(item.name)[2]; // Use just the value between 'properties[' and ']'\n    return item;\n  });\n};\n\n/**\n * Getter method which returns the current quantity or 1 if no quantity input is\n * included in the form\n *\n * @returns {Array} Collection of objects with name and value keys\n */\nProductForm.prototype.quantity = function() {\n  return this.quantityInputs[0]\n    ? Number.parseInt(this.quantityInputs[0].value, 10)\n    : 1;\n};\n\n// Private Methods\n// -----------------------------------------------------------------------------\nProductForm.prototype._setIdInputValue = function(value) {\n  var idInputElement = this.element.querySelector(selectors.idInput);\n\n  if (!idInputElement) {\n    idInputElement = document.createElement('input');\n    idInputElement.type = 'hidden';\n    idInputElement.name = 'id';\n    this.element.appendChild(idInputElement);\n  }\n\n  idInputElement.value = value.toString();\n};\n\nProductForm.prototype._onSubmit = function(options, event) {\n  event.dataset = this._getProductFormEventData();\n\n  this._setIdInputValue(event.dataset.variant.id);\n\n  if (options.onFormSubmit) {\n    options.onFormSubmit(event);\n  }\n};\n\nProductForm.prototype._onFormEvent = function(cb) {\n  if (typeof cb === 'undefined') {\n    return Function.prototype;\n  }\n\n  return function(event) {\n    event.dataset = this._getProductFormEventData();\n    cb(event);\n  }.bind(this);\n};\n\nProductForm.prototype._initInputs = function(selector, cb) {\n  var elements = Array.prototype.slice.call(\n    this.element.querySelectorAll(selector)\n  );\n\n  return elements.map(\n    function(element) {\n      this._listeners.add(element, 'change', this._onFormEvent(cb));\n      return element;\n    }.bind(this)\n  );\n};\n\nProductForm.prototype._getProductFormEventData = function() {\n  return {\n    options: this.options(),\n    variant: this.variant(),\n    properties: this.properties(),\n    quantity: this.quantity()\n  };\n};\n\nfunction _serializeInputValues(inputs, transform) {\n  return inputs.reduce(function(options, input) {\n    if (\n      input.checked || // If input is a checked (means type radio or checkbox)\n      (input.type !== 'radio' && input.type !== 'checkbox') // Or if its any other type of input\n    ) {\n      options.push(transform({ name: input.name, value: input.value }));\n    }\n\n    return options;\n  }, []);\n}\n\nfunction _validateProductObject(product) {\n  if (typeof product !== 'object') {\n    throw new TypeError(product + ' is not an object.');\n  }\n\n  if (typeof product.variants[0].options === 'undefined') {\n    throw new TypeError(\n      'Product object is invalid. Make sure you use the product object that is output from {{ product | json }} or from the http://[your-product-url].js route'\n    );\n  }\n\n  return product;\n}\n","var SECTION_ID_ATTR = 'data-section-id';\n\nexport default function Section(container, properties) {\n  this.container = validateContainerElement(container);\n  this.id = container.getAttribute(SECTION_ID_ATTR);\n  this.extensions = [];\n\n  Object.assign(this, validatePropertiesObject(properties));\n\n  this.onLoad();\n}\n\nSection.prototype = {\n  onLoad: Function.prototype,\n  onUnload: Function.prototype,\n  onSelect: Function.prototype,\n  onDeselect: Function.prototype,\n  onBlockSelect: Function.prototype,\n  onBlockDeselect: Function.prototype,\n\n  extend: function extend(extension) {\n    this.extensions.push(extension); // Save original extension\n\n    var extensionClone = Object.assign({}, extension);\n    delete extensionClone.init; // Remove init function before assigning extension properties\n    Object.assign(this, extensionClone);\n\n    if (typeof extension.init === 'function') {\n      extension.init.apply(this);\n    }\n  }\n};\n\nfunction validateContainerElement(container) {\n  if (!(container instanceof Element)) {\n    throw new TypeError(\n      'Theme Sections: Attempted to load section. The section container provided is not a DOM element.'\n    );\n  }\n  if (container.getAttribute(SECTION_ID_ATTR) === null) {\n    throw new Error(\n      'Theme Sections: The section container provided does not have an id assigned to the ' +\n        SECTION_ID_ATTR +\n        ' attribute.'\n    );\n  }\n\n  return container;\n}\n\nfunction validatePropertiesObject(value) {\n  if (\n    (typeof value !== 'undefined' && typeof value !== 'object') ||\n    value === null\n  ) {\n    throw new TypeError(\n      'Theme Sections: The properties object provided is not a valid'\n    );\n  }\n\n  return value;\n}\n\n// Object.assign() polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\nif (typeof Object.assign != 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, 'assign', {\n    value: function assign(target, varArgs) {\n      // .length of function is 2\n      'use strict';\n      if (target == null) {\n        // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) {\n          // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n","/*\n * @shopify/theme-sections\n * -----------------------------------------------------------------------------\n *\n * A framework to provide structure to your Shopify sections and a load and unload\n * lifecycle. The lifecycle is automatically connected to theme editor events so\n * that your sections load and unload as the editor changes the content and\n * settings of your sections.\n */\n\nimport Section from './section';\n\nvar SECTION_TYPE_ATTR = 'data-section-type';\nvar SECTION_ID_ATTR = 'data-section-id';\n\nwindow.Shopify = window.Shopify || {};\nwindow.Shopify.theme = window.Shopify.theme || {};\nwindow.Shopify.theme.sections = window.Shopify.theme.sections || {};\n\nexport var registered = (window.Shopify.theme.sections.registered =\n  window.Shopify.theme.sections.registered || {});\nexport var instances = (window.Shopify.theme.sections.instances =\n  window.Shopify.theme.sections.instances || []);\n\nexport function register(type, properties) {\n  if (typeof type !== 'string') {\n    throw new TypeError(\n      'Theme Sections: The first argument for .register must be a string that specifies the type of the section being registered'\n    );\n  }\n\n  if (typeof registered[type] !== 'undefined') {\n    throw new Error(\n      'Theme Sections: A section of type \"' +\n        type +\n        '\" has already been registered. You cannot register the same section type twice'\n    );\n  }\n\n  function TypedSection(container) {\n    Section.call(this, container, properties);\n  }\n\n  TypedSection.constructor = Section;\n  TypedSection.prototype = Object.create(Section.prototype);\n  TypedSection.prototype.type = type;\n\n  return (registered[type] = TypedSection);\n}\n\nexport function unregister(types) {\n  types = normalizeType(types);\n\n  types.forEach(function(type) {\n    delete registered[type];\n  });\n}\n\nexport function load(types, containers) {\n  types = normalizeType(types);\n\n  if (typeof containers === 'undefined') {\n    containers = document.querySelectorAll('[' + SECTION_TYPE_ATTR + ']');\n  }\n\n  containers = normalizeContainers(containers);\n\n  types.forEach(function(type) {\n    var TypedSection = registered[type];\n\n    if (typeof TypedSection === 'undefined') {\n      return;\n    }\n\n    containers = containers.filter(function(container) {\n      // Filter from list of containers because container already has an instance loaded\n      if (isInstance(container)) {\n        return false;\n      }\n\n      // Filter from list of containers because container doesn't have data-section-type attribute\n      if (container.getAttribute(SECTION_TYPE_ATTR) === null) {\n        return false;\n      }\n\n      // Keep in list of containers because current type doesn't match\n      if (container.getAttribute(SECTION_TYPE_ATTR) !== type) {\n        return true;\n      }\n\n      instances.push(new TypedSection(container));\n\n      // Filter from list of containers because container now has an instance loaded\n      return false;\n    });\n  });\n}\n\nexport function unload(selector) {\n  var instancesToUnload = getInstances(selector);\n\n  instancesToUnload.forEach(function(instance) {\n    var index = instances\n      .map(function(e) {\n        return e.id;\n      })\n      .indexOf(instance.id);\n    instances.splice(index, 1);\n    instance.onUnload();\n  });\n}\n\nexport function extend(selector, extension) {\n  var instancesToExtend = getInstances(selector);\n\n  instancesToExtend.forEach(function(instance) {\n    instance.extend(extension);\n  });\n}\n\nexport function getInstances(selector) {\n  var filteredInstances = [];\n\n  // Fetch first element if its an array\n  if (NodeList.prototype.isPrototypeOf(selector) || Array.isArray(selector)) {\n    var firstElement = selector[0];\n  }\n\n  // If selector element is DOM element\n  if (selector instanceof Element || firstElement instanceof Element) {\n    var containers = normalizeContainers(selector);\n\n    containers.forEach(function(container) {\n      filteredInstances = filteredInstances.concat(\n        instances.filter(function(instance) {\n          return instance.container === container;\n        })\n      );\n    });\n\n    // If select is type string\n  } else if (typeof selector === 'string' || typeof firstElement === 'string') {\n    var types = normalizeType(selector);\n\n    types.forEach(function(type) {\n      filteredInstances = filteredInstances.concat(\n        instances.filter(function(instance) {\n          return instance.type === type;\n        })\n      );\n    });\n  }\n\n  return filteredInstances;\n}\n\nexport function getInstanceById(id) {\n  var instance;\n\n  for (var i = 0; i < instances.length; i++) {\n    if (instances[i].id === id) {\n      instance = instances[i];\n      break;\n    }\n  }\n  return instance;\n}\n\nexport function isInstance(selector) {\n  return getInstances(selector).length > 0;\n}\n\nfunction normalizeType(types) {\n  // If '*' then fetch all registered section types\n  if (types === '*') {\n    types = Object.keys(registered);\n\n    // If a single section type string is passed, put it in an array\n  } else if (typeof types === 'string') {\n    types = [types];\n\n    // If single section constructor is passed, transform to array with section\n    // type string\n  } else if (types.constructor === Section) {\n    types = [types.prototype.type];\n\n    // If array of typed section constructors is passed, transform the array to\n    // type strings\n  } else if (Array.isArray(types) && types[0].constructor === Section) {\n    types = types.map(function(TypedSection) {\n      return TypedSection.prototype.type;\n    });\n  }\n\n  types = types.map(function(type) {\n    return type.toLowerCase();\n  });\n\n  return types;\n}\n\nfunction normalizeContainers(containers) {\n  // Nodelist with entries\n  if (NodeList.prototype.isPrototypeOf(containers) && containers.length > 0) {\n    containers = Array.prototype.slice.call(containers);\n\n    // Empty Nodelist\n  } else if (\n    NodeList.prototype.isPrototypeOf(containers) &&\n    containers.length === 0\n  ) {\n    containers = [];\n\n    // Handle null (document.querySelector() returns null with no match)\n  } else if (containers === null) {\n    containers = [];\n\n    // Single DOM element\n  } else if (!Array.isArray(containers) && containers instanceof Element) {\n    containers = [containers];\n  }\n\n  return containers;\n}\n\nif (window.Shopify.designMode) {\n  document.addEventListener('shopify:section:load', function(event) {\n    var id = event.detail.sectionId;\n    var container = event.target.querySelector(\n      '[' + SECTION_ID_ATTR + '=\"' + id + '\"]'\n    );\n\n    if (container !== null) {\n      load(container.getAttribute(SECTION_TYPE_ATTR), container);\n    }\n  });\n\n  document.addEventListener('shopify:section:unload', function(event) {\n    var id = event.detail.sectionId;\n    var container = event.target.querySelector(\n      '[' + SECTION_ID_ATTR + '=\"' + id + '\"]'\n    );\n    var instance = getInstances(container)[0];\n\n    if (typeof instance === 'object') {\n      unload(container);\n    }\n  });\n\n  document.addEventListener('shopify:section:select', function(event) {\n    var instance = getInstanceById(event.detail.sectionId);\n\n    if (typeof instance === 'object') {\n      instance.onSelect(event.detail.load);\n    }\n  });\n\n  document.addEventListener('shopify:section:deselect', function(event) {\n    var instance = getInstanceById(event.detail.sectionId);\n\n    if (typeof instance === 'object') {\n      instance.onDeselect();\n    }\n  });\n\n  document.addEventListener('shopify:block:select', function(event) {\n    var instance = getInstanceById(event.detail.sectionId);\n\n    if (typeof instance === 'object') {\n      instance.onBlockSelect(event.detail.blockId, event.detail.load);\n    }\n  });\n\n  document.addEventListener('shopify:block:deselect', function(event) {\n    var instance = getInstanceById(event.detail.sectionId);\n\n    if (typeof instance === 'object') {\n      instance.onBlockDeselect(event.detail.blockId);\n    }\n  });\n}\n","'use strict';\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _themeProductForm = require('@shopify/theme-product-form');\n\nvar _themeCurrency = require('@shopify/theme-currency');\n\nvar _themeSections = require('@shopify/theme-sections');\n\nvar _themeA11y = require('@shopify/theme-a11y');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Product Template Script\n * ------------------------------------------------------------------------------\n * A file that contains scripts highly couple code to the Product template.\n *\n * @namespace product\n */\n\nvar classes = {\n  hide: 'hide'\n};\n\nvar keyboardKeys = {\n  ENTER: 13\n};\n\nvar selectors = {\n  submitButton: '[data-submit-button]',\n  submitButtonText: '[data-submit-button-text]',\n  comparePrice: '[data-compare-price]',\n  comparePriceText: '[data-compare-text]',\n  priceWrapper: '[data-price-wrapper]',\n  imageWrapper: '[data-product-image-wrapper]',\n  visibleImageWrapper: '[data-product-image-wrapper]:not(.' + classes.hide + ')',\n  imageWrapperById: function imageWrapperById(id) {\n    return selectors.imageWrapper + '[data-image-id=\\'' + id + '\\']';\n  },\n  productForm: '[data-product-form]',\n  productPrice: '[data-product-price]',\n  thumbnail: '[data-product-single-thumbnail]',\n  thumbnailById: function thumbnailById(id) {\n    return '[data-thumbnail-id=\\'' + id + '\\']';\n  },\n  thumbnailActive: '[data-product-single-thumbnail][aria-current]'\n};\n\n(0, _themeSections.register)('product', {\n  onLoad: function onLoad() {\n    var _this = this;\n\n    return (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n      var productFormElement;\n      return _regenerator2.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              productFormElement = document.querySelector(selectors.productForm);\n              _context.next = 3;\n              return _this.getProductJson(productFormElement.dataset.productHandle);\n\n            case 3:\n              _this.product = _context.sent;\n\n              _this.productForm = new _themeProductForm.ProductForm(productFormElement, _this.product, {\n                onOptionChange: _this.onFormOptionChange.bind(_this)\n              });\n\n              _this.onThumbnailClick = _this.onThumbnailClick.bind(_this);\n              _this.onThumbnailKeyup = _this.onThumbnailKeyup.bind(_this);\n\n              _this.container.addEventListener('click', _this.onThumbnailClick);\n              _this.container.addEventListener('keyup', _this.onThumbnailKeyup);\n\n            case 9:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this);\n    }))();\n  },\n  onUnload: function onUnload() {\n    this.productForm.destroy();\n    this.removeEventListener('click', this.onThumbnailClick);\n    this.removeEventListener('keyup', this.onThumbnailKeyup);\n  },\n  getProductJson: function getProductJson(handle) {\n    return fetch('/products/' + handle + '.js').then(function (response) {\n      return response.json();\n    });\n  },\n  onFormOptionChange: function onFormOptionChange(event) {\n    var variant = event.dataset.variant;\n\n    this.renderImages(variant);\n    this.renderPrice(variant);\n    this.renderComparePrice(variant);\n    this.renderSubmitButton(variant);\n\n    this.updateBrowserHistory(variant);\n  },\n  onThumbnailClick: function onThumbnailClick(event) {\n    var thumbnail = event.target.closest(selectors.thumbnail);\n\n    if (!thumbnail) {\n      return;\n    }\n\n    event.preventDefault();\n\n    this.renderFeaturedImage(thumbnail.dataset.thumbnailId);\n    this.renderActiveThumbnail(thumbnail.dataset.thumbnailId);\n  },\n  onThumbnailKeyup: function onThumbnailKeyup(event) {\n    if (event.keyCode !== keyboardKeys.ENTER || !event.target.closest(selectors.thumbnail)) {\n      return;\n    }\n\n    var visibleFeaturedImageWrapper = this.container.querySelector(selectors.visibleImageWrapper);\n\n    (0, _themeA11y.forceFocus)(visibleFeaturedImageWrapper);\n  },\n  renderSubmitButton: function renderSubmitButton(variant) {\n    var submitButton = this.container.querySelector(selectors.submitButton);\n    var submitButtonText = this.container.querySelector(selectors.submitButtonText);\n\n    if (!variant) {\n      submitButton.disabled = true;\n      submitButtonText.innerText = theme.strings.unavailable;\n    } else if (variant.available) {\n      submitButton.disabled = false;\n      submitButtonText.innerText = theme.strings.addToCart;\n    } else {\n      submitButton.disabled = true;\n      submitButtonText.innerText = theme.strings.soldOut;\n    }\n  },\n  renderImages: function renderImages(variant) {\n    if (!variant || variant.featured_image === null) {\n      return;\n    }\n\n    this.renderFeaturedImage(variant.featured_image.id);\n    this.renderActiveThumbnail(variant.featured_image.id);\n  },\n  renderPrice: function renderPrice(variant) {\n    var priceElement = this.container.querySelector(selectors.productPrice);\n    var priceWrapperElement = this.container.querySelector(selectors.priceWrapper);\n\n    priceWrapperElement.classList.toggle(classes.hide, !variant);\n\n    if (variant) {\n      priceElement.innerText = (0, _themeCurrency.formatMoney)(variant.price, theme.moneyFormat);\n    }\n  },\n  renderComparePrice: function renderComparePrice(variant) {\n    if (!variant) {\n      return;\n    }\n\n    var comparePriceElement = this.container.querySelector(selectors.comparePrice);\n    var compareTextElement = this.container.querySelector(selectors.comparePriceText);\n\n    if (!comparePriceElement || !compareTextElement) {\n      return;\n    }\n\n    if (variant.compare_at_price > variant.price) {\n      comparePriceElement.innerText = (0, _themeCurrency.formatMoney)(variant.compare_at_price, theme.moneyFormat);\n      compareTextElement.classList.remove(classes.hide);\n      comparePriceElement.classList.remove(classes.hide);\n    } else {\n      comparePriceElement.innerText = '';\n      compareTextElement.classList.add(classes.hide);\n      comparePriceElement.classList.add(classes.hide);\n    }\n  },\n  renderActiveThumbnail: function renderActiveThumbnail(id) {\n    var activeThumbnail = this.container.querySelector(selectors.thumbnailById(id));\n    var inactiveThumbnail = this.container.querySelector(selectors.thumbnailActive);\n\n    if (activeThumbnail === inactiveThumbnail) {\n      return;\n    }\n\n    inactiveThumbnail.removeAttribute('aria-current');\n    activeThumbnail.setAttribute('aria-current', true);\n  },\n  renderFeaturedImage: function renderFeaturedImage(id) {\n    var activeImage = this.container.querySelector(selectors.visibleImageWrapper);\n    var inactiveImage = this.container.querySelector(selectors.imageWrapperById(id));\n\n    activeImage.classList.add(classes.hide);\n    inactiveImage.classList.remove(classes.hide);\n  },\n  updateBrowserHistory: function updateBrowserHistory(variant) {\n    var enableHistoryState = this.productForm.element.dataset.enableHistoryState;\n\n    if (!variant || enableHistoryState !== 'true') {\n      return;\n    }\n\n    var url = (0, _themeProductForm.getUrlWithVariant)(window.location.href, variant.id);\n    window.history.replaceState({ path: url }, '', url);\n  }\n});"],"sourceRoot":""}