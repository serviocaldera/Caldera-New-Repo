{%- assign travelSize = section.settings.travel-size -%}
{%- assign travelProduct = all_products[section.settings.travel-product] -%}
{%- assign travelProductImage = travelProduct.featured_image | default: travelProduct.featured_image -%}
{%- assign giftText = section.settings.gift-text -%}
{%- assign giftProduct = all_products[section.settings.gift-product] -%}
<div id="offcanvas-right" class="c-offcanvas c-offcanvas--right" aria-hidden="true">
    <div class="c-cart c-drawer">  
        <form action="/cart" class="addtocart-form" novalidate method="post">
            <span data-cart-render=""></span>
            <div id="" class="c-drawer__body" data-cart-view="data-cart-view" rules="all">

                <div class="c-drawer__header">
                    <div class="c-drawer__headerTop">
                      <h3 class="c-drawer__title">Shopping Cart </h3>            
                      <span class="c-offcanvas__close c-drawer__close" aria-label="Close Menu" aria-hidden="true">
                          <svg width="16px" height="16px" viewBox="0 0 16 16" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                              <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                  <g id="cart-slide-in-CL--subscription" transform="translate(-339.000000, -20.000000)" fill="#AF5D00" fill-rule="nonzero">
                                      <g id="noun_X_1099163_3d3d38" transform="translate(339.000000, 20.000000)">
                                          <path d="M6.97148103,8 L0.213013231,1.2415322 C-0.0710044102,0.957514526 -0.0710044102,0.497030907 0.213013231,0.213013231 C0.497030907,-0.0710044102 0.957514526,-0.0710044102 1.2415322,0.213013231 L8,6.97148103 L14.7584678,0.213013231 C15.0424855,-0.0710044102 15.5029691,-0.0710044102 15.7869868,0.213013231 C16.0710044,0.497030907 16.0710044,0.957514526 15.7869868,1.2415322 L9.02851897,8 L15.7869868,14.7584678 C16.0710044,15.0424855 16.0710044,15.5029691 15.7869868,15.7869868 C15.5029691,16.0710044 15.0424855,16.0710044 14.7584678,15.7869868 L8,9.02851897 L1.2415322,15.7869868 C0.957514526,16.0710044 0.497030907,16.0710044 0.213013231,15.7869868 C-0.0710044102,15.5029691 -0.0710044102,15.0424855 0.213013231,14.7584678 L6.97148103,8 Z" id="Path"></path>
                                      </g>
                                  </g>
                              </g>
                          </svg>
                      </span>  
                    </div>
                    {% if section.settings.travel-size == true %}
                      <div class="c-drawerTravel__header" rv-hide="cart.item_count | lt 1">
                        <img src="{{ travelProductImage | img_url: 'master' }}" alt="{{ travelProductImage.alt | escape }}"  />
                        <div class="c-drawerTravel__headerCopy">{{ section.settings.travel-copy }}</div>
                      </div>  
                    {%endif%}
                </div>
                <div class="c-cartDrawerMain">
                    <div class="c-cart__productList">
                        <div class="c-cart__productArea">
                            <div rv-each-item="cart.items" class="c-cart__product" rv-variant-id="item.variant_id" product-variant-id="item.variant_id" rv-data-original-price="item.price">
                                <div class="c-cart__row c-drawer__item">
                                    <div class="c-cart__itemImageBox c-drawer__itemImg">
                                        <img rv-src="item.image" rv-alt="item.variant_title">
                                    </div>
                                    <div class="c-cart__itemInfoBox c-drawer__itemDesc">
                                        <div rv-unless="item.properties.Subscription">
                                            <h2 rv-html="item.product_title | cname" class="c-cart__itemName c-drawer__itemName"></h2>    
                                        </div>
                                        <div class="c-cart__deliveryInfo" rv-if="item.id | eq {{ travelProduct.variants[0].id }}">Free</div>
                                        <h2 rv-text="item.properties.Subscription Product Title" class="c-cart__itemName c-drawer__itemName"></h2>
                                        <div class="c-cart__deliveryInfo" rv-if="item.properties.Subscription" >
                                            20% off
                                            / {% include 'icon' with 'repeat' %} Delivery Every 
                                            <span rv-text="item.properties.Subscription"></span>
                                        </div>
                                        <!--div class="c-cart__deliveryInfo" rv-unless="item.properties.Pre Order Item | eq Pre Order Item">
                                            Pre-Order: Ships Early Summer
                                        </div-->    
                                        
                                        <span class="c-cart__itemRemove" rv-data-id="item.key" product-data-id="item.key" rv-data-cart-remove-id="item.key" rv-hide="item.id | eq {{ travelProduct.variants[0].id }}" >
                                            <svg width="12px" height="12px" viewBox="0 0 12 12" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                                <!-- Generator: Sketch 53.2 (72643) - https://sketchapp.com -->
                                                <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                    <g id="cart-slide-in-CL--subscription" transform="translate(-343.000000, -225.000000)" fill="#3D3D38" fill-rule="nonzero">
                                                        <g id="the-good-sample" transform="translate(30.000000, 225.000000)">
                                                            <g id="noun_X_1099163_3d3d38-Copy" transform="translate(313.000000, 0.000000)">
                                                                <path d="M5.22861077,6 L0.159759923,0.931149151 C-0.0532533077,0.718135894 -0.0532533077,0.37277318 0.159759923,0.159759923 C0.37277318,-0.0532533077 0.718135894,-0.0532533077 0.931149151,0.159759923 L6,5.22861077 L11.0688508,0.159759923 C11.2818641,-0.0532533077 11.6272268,-0.0532533077 11.8402401,0.159759923 C12.0532533,0.37277318 12.0532533,0.718135894 11.8402401,0.931149151 L6.77138923,6 L11.8402401,11.0688508 C12.0532533,11.2818641 12.0532533,11.6272268 11.8402401,11.8402401 C11.6272268,12.0532533 11.2818641,12.0532533 11.0688508,11.8402401 L6,6.77138923 L0.931149151,11.8402401 C0.718135894,12.0532533 0.37277318,12.0532533 0.159759923,11.8402401 C-0.0532533077,11.6272268 -0.0532533077,11.2818641 0.159759923,11.0688508 L5.22861077,6 Z" id="Path"></path>
                                                            </g>
                                                        </g>
                                                    </g>
                                                </g>
                                            </svg>
                                        </span>
                                        
                                        <div class="c-cart__itemLowerBox" rv-data-price="item.final_line_price | money" rv-hide="item.final_line_price | eq 0">
                                            <div rv-if="item.properties.Subscription" class="c-cart__subTime">
                                                <span class="js-subscription-price c-cart__itemPrice"
                                                rv-data-original-price="item.final_line_price"
                                                rv-data-discount-amount="item.properties.Discount Amount"
                                                rv-data-subscription-amount="item.properties.Subscription Amount"
                                                rv-data-currency-symbol="USD"
                                                rv-data-cart-quantity="item.quantity"
                                                rv-text="item.properties.Subscription Amount"
                                                ></span>
                                            </div>
                                            <div rv-unless="item.properties.Subscription" class="c-cart__oneTime">
                                                <div class="c-cart__itemPriceBox c-drawer__itemPrice">
                                                    {% if shop.money_with_currency_format contains 'USD' %}
                                                        <span class="js-onetime-price c-cart__itemPrice" 
                                                        rv-data-discount-amount="item.properties.Discount Amount"
                                                        rv-data-subscription-amount="item.properties.Subscription Amount"
                                                        rv-data-currency-symbol="USD"
                                                        rv-data-cart-quantity="item.quantity"
                                                        rv-html="item.final_line_price | money"
                                                    >
                                                        
                                                    {% else %}
                                                        <span class="c-cart__itemPrice" rv-html="item.final_line_price | money" class="c-cart__itemPrice">
                                                    {% endif %}
                                                        
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="c-cart__itemQuantityBox ajaxcart__qty" rv-hide="item.id | eq {{ giftProduct.variants[0].id }}">
                                                <a href="#" rv-data-cart-update="index | plus 1" rv-data-cart-quantity="item.quantity | minus 1" class="ajaxcart__qty-adjust ajaxcart__qty--minus js-minus-product icon-fallback-text">
                                                    <span class="c-drawer__minus">
                                                        <svg width="10" height="2" xmlns="http://www.w3.org/2000/svg"><path d="M12.612 0H1.478C1.264 0 .8.308.8.925c0 .616.464.924.678.924h11.134c.214 0 .678-.308.678-.924 0-.617-.464-.925-.678-.925z" fill="#d3d2d0" fill-rule="nonzero"/></svg>
                                                    </span>
                                                </a>
                                                <span rv-text="item.quantity" class="ajaxcart__qty-num"></span>
                                                <a href="#" rv-data-cart-update="index | plus 1" rv-data-cart-quantity="item.quantity | plus 1" class="ajaxcart__qty-adjust ajaxcart__qty--plus icon-fallback-text">
                                                    <span class="c-drawer__plus">
                                                        <svg width="11" height="13" xmlns="http://www.w3.org/2000/svg"><path d="M11.485 5.163H6.974V.65c0-.205-.28-.651-.838-.651C5.578 0 5.3.446 5.3.651v4.512H.788c-.206 0-.652.279-.652.837 0 .558.446.837.652.837h4.511v4.512c0 .205.28.651.837.651.558 0 .838-.446.838-.651V6.837h4.511c.206 0 .651-.279.651-.837 0-.558-.445-.837-.65-.837z" fill="#d3d2d0" fill-rule="nonzero"/></svg>
                                                    </span>
                                                </a>
                                            </div>
                                            <div rv-each-discount="item.discounts" rv-hide="item.discounts | empty" class="c-cart__itemDiscountBox">
                                                <span rv-text="discount.title" class="c-cart__itemDiscount"></span>
                                            </div>
                                            
                                        </div>
                                        <div class="c-cart_limitMessage js-limit-message" rv-if="item.properties.Subscription">
                                            The Maximum Membership Qty is 2.
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        {% if cart.total_discount > 0 %}
                        <div class="c-cart__product swell-cart-product">
                            <div class="c-cart__row c-drawer__item">
                                <div class="c-cart__itemInfoBox c-drawer__itemDesc">
                                    <h2 class="c-cart__itemName c-drawer__itemName">Discount</h2>
                                    <span class="c-cart__itemRemove swell-item-remove">
                                        <svg width="12px" height="12px" viewBox="0 0 12 12" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                            <!-- Generator: Sketch 53.2 (72643) - https://sketchapp.com -->
                                            <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                <g id="cart-slide-in-CL--subscription" transform="translate(-343.000000, -225.000000)" fill="#3D3D38" fill-rule="nonzero">
                                                    <g id="the-good-sample" transform="translate(30.000000, 225.000000)">
                                                        <g id="noun_X_1099163_3d3d38-Copy" transform="translate(313.000000, 0.000000)">
                                                            <path d="M5.22861077,6 L0.159759923,0.931149151 C-0.0532533077,0.718135894 -0.0532533077,0.37277318 0.159759923,0.159759923 C0.37277318,-0.0532533077 0.718135894,-0.0532533077 0.931149151,0.159759923 L6,5.22861077 L11.0688508,0.159759923 C11.2818641,-0.0532533077 11.6272268,-0.0532533077 11.8402401,0.159759923 C12.0532533,0.37277318 12.0532533,0.718135894 11.8402401,0.931149151 L6.77138923,6 L11.8402401,11.0688508 C12.0532533,11.2818641 12.0532533,11.6272268 11.8402401,11.8402401 C11.6272268,12.0532533 11.2818641,12.0532533 11.0688508,11.8402401 L6,6.77138923 L0.931149151,11.8402401 C0.718135894,12.0532533 0.37277318,12.0532533 0.159759923,11.8402401 C-0.0532533077,11.6272268 -0.0532533077,11.2818641 0.159759923,11.0688508 L5.22861077,6 Z" id="Path"></path>
                                                        </g>
                                                    </g>
                                                </g>
                                            </g>
                                        </svg>
                                    </span>
                                    <div class="c-cart__itemLowerBox">
                                        <div class="c-cart__itemPriceBox c-drawer__itemPrice">
                                                <span class="c-cart__itemPrice" class="c-cart__itemPrice">{{ cart.total_discount | money}} 
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                         {% endif %}   
                    </div>  
                
                    <div rv-show="cart.item_count | lt 1" class="c-cart__emptyText">
                        <span>You have no items in your shopping bag.</span>
                 
                    </div>
                </div>
                <div class="c-cartDrawerBottom" rv-hide="cart.item_count | lt 1">
                    {% if section.settings.gift-wrap %}
                        <div class="c-cartDrawerOpt">
                            <div class="c-cartDrawerOpt__row">
                                <div class="c-cartDrawerOpt__box"
                                data-id="{{ giftProduct.variants[0].id }}"
                                >
                                    <div class="c-cartDrawerOpt__col">
                                        <img src="{{ giftProduct | img_url: 'master' }}" alt="{{ giftProduct.featured_image.alt | escape }}"  />
                                        <span>{{ section.settings.gift-text}}</span>
                                        <small>
                                            {{ section.settings.gift-text-additional }}
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="c-cartDrawerNote">
                            <label>{{ section.settings.gift-textarea}}</label>
                            <textarea name="note" data-cart-notes id="note" data-limit="{{ section.settings.gift-character-limit}}" placeholder="Personal message (optional)">{{ cart.note }}</textarea>
                            <div class="c-cartDrawerNote__char">
                                <span id="cart-note-char">{{ section.settings.gift-character-limit}}</span> {{ section.settings.gift-character-limit-text}}
                            </div>
                        </div>
                    {%endif%}

                    <div class="c-drawerTotalBox">
                        <div class="c-drawer__subTotal">
                            <div class="c-drawer__subTotalLeft">
                                <div rv-show="cart.item_count | gt 0" class="c-cart__footerPriceBox">
                                    <div class="c-cart__subtotal c-drawer__subTotalTitle">Subtotal</div>
                                    {% if shop.money_with_currency_format contains 'USD' %}
                                        <div id="cart-subtotal" class="c-cart__total js-shippingPrice c-drawer__subTotalPrice" rv-data-total-price="cart.total_price | money_without_currency" rv-html="cart.items_subtotal_price | money Currency.currentCurrency"></div>
                                    {% else %}
                                        <div id="cart-subtotal" class="c-cart__total js-shippingPrice c-drawer__subTotalPrice" rv-data-total-price="cart.total_price | money_without_currency" rv-html="cart.items_subtotal_price | money_with_currency"></div>

                                    {% endif %}
                                </div>
                            </div>
                            <div class="c-drawer__subTotalRight">
                                <div class="cartCanvas__buttons" rv-show="cart.item_count | gt 0">
                                    <button class="btn btn--primary c-checkoutBtn js-cart-checkout-btn" type="submit" name="checkout" value="Check Out">Checkout</button>
                                    <a href="#" class="btn btn--primary c-checkoutRechBtn js-cart-checkout-recharge-btn">Checkout</a>
                                </div>
                            </div>
                        </div>
                        <div class="c-cartDrawer__bar">
                            {{ section.settings.bottom-bar }}
                        </div>    
                    </div>
                </div>

            </div>

                
          
        </form>
    </div>
</div>
<style>
    .c-drawer__itemName span {
        display: block;
        font-size: 13px;
    }
</style>
{{ "//code.jquery.com/jquery-3.3.1.min.js" | script_tag}}
{{"swell-drop-down.js" | asset_url | script_tag}}
<script src="{{ 'offconvas.js' | asset_url }}"></script>
<script src="{{ 'rivets-cart.js' | asset_url }}"></script>

<script type="text/javascript">

    //var includeModal;
    var moneyWithCurrencyFormat = "{{ shop.money_with_currency_format }}";
    var cartDrawer = $(".js-cartCanvas").offcanvas({
        showOverlay: true
    });

    // Shopify Object To JavaScript Global Object
    var cartJSON = {{ cart | json }}, AddToCartClicked = false;

    // Initializing CartJS
    $(function() {
        CartJS.init(cartJSON , {
            "dataAPI": true,
            "requestBodyClass": "loading",
            "moneyFormat": "{{ shop.money_format  }}",
            "moneyWithCurrencyFormat": "{{ shop.money_with_currency_format }}"
        });
    });

    rivets.bind($("[rv-value], #CartCount"), CartJS);
  

    function checkAvailable(items, id, cart){
        let ava = false
        for(var i=0; i<items.length; i++){
            if(items[i].variant_id == id){
                ava = true
                cart.original_total_price -= items[i].original_line_price
                cart.total_price -= items[i].original_line_price
                items[i].line_price = items[i].original_line_price = items[i].original_price = items[i].price = 0

                break;
            }
        }
        return ava
    }

    function checkProperties(items, prop, cart){
        let ava = false
        for(var i=0; i<items.length; i++){
            if(items[i].properties.SubscriptionEnable == prop){
                ava = true
                cart.original_total_price -= items[i].original_line_price
                cart.total_price -= items[i].original_line_price
                items[i].line_price = items[i].original_line_price = items[i].original_price = items[i].price = 0

                break;
            }
        }
        return ava
    }


    // ---------------------------------------------------------------------------
    // Money format handler
    // ---------------------------------------------------------------------------
    Shopify.money_format = "{{ shop.money_with_currency_format }}";
    Shopify.formatMoney = function(cents, format) {
      if (typeof cents == 'string') { cents = cents.replace('.',''); }
      var value = '';
      var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
      var formatString = (format || this.money_format);

      function defaultOption(opt, def) {
         return (typeof opt == 'undefined' ? def : opt);
      }

      function formatWithDelimiters(number, precision, thousands, decimal) {
        precision = defaultOption(precision, 2);
        thousands = defaultOption(thousands, ',');
        decimal   = defaultOption(decimal, '.');

        if (isNaN(number) || number == null) { return 0; }

        number = (number/100.0).toFixed(precision);

        var parts   = number.split('.'),
            dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
            cents   = parts[1] ? (decimal + parts[1]) : '';

        return dollars + cents;
      }

      switch(formatString.match(placeholderRegex)[1]) {
        case 'amount':
          value = formatWithDelimiters(cents, 2);
          break;
        case 'amount_no_decimals':
          value = formatWithDelimiters(cents, 0);
          break;
        case 'amount_with_comma_separator':
          value = formatWithDelimiters(cents, 2, '.', ',');
          break;
        case 'amount_no_decimals_with_comma_separator':
          value = formatWithDelimiters(cents, 0, '.', ',');
          break;
      }

      return formatString.replace(placeholderRegex, value);
    }

    function floatToString(numeric, decimals) {
        var amount = numeric.toFixed(decimals).toString();
        if(amount.match(/^\.\d+/)) {return "0"+amount; }
            else { return amount; }
    };

    window.currencySymbolMap = {
      AUD: '$',
      CAD: '$',
      DKK: 'kr',
      EUR: '€',
      HKD: '$',
      JPY: '¥',
      NZD: '$',
      GBP: '£',
      SGD: '$',
      USD: '$',
      AED: 'Dhs. '
    }

    function formatPriceWithCurrency(value) {
      var activeCurrencyString = window.Shopify.currency.active
      return window.currencySymbolMap[activeCurrencyString] + value + ' ' 
    }


    function upscribeBuildCheckout() {
        $.ajax('/cart.json')
        .done(function(cart) {
            console.log('get cart done res', cart)

            var cartToken = cart.token

            cart.url = window.Shopify.shop
            cart.analytics = window.ShopifyAnalytics
            $.ajax({
                url: "https://endpoint.upscribe.io/cart",
                type: "POST",
                data: JSON.stringify(cart)
            })
            .done(function(res) {
                console.log('post done: ', res)
            })
            .fail(function(e) {
                console.log('post error: ', e)
                return e
            })
        })
        .fail(function(e) {
            console.log('get cart error', e);
            return e
        })
    }


    function getCookie(name) {
        var v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');
        return v ? v[2] : null;
    }  


    function upscribeBuildCheckoutURL() {
        
        function get_cookie(name){
            return( document.cookie.match('(^|; )'+name+'=([^;]*)')||0 )[2];
        }
        
        var token = get_cookie('cart');
        if (token === undefined) {
            return window.setTimeout(upscribeBuildCheckoutURL, 500);
        }
        
        var myshopify_domain='{{ shop.permanent_domain }}'
        try { var ga_linker = ga.getAll()[0].get('linkerParam') } catch(err) { var ga_linker ='' }
        var customer_param = '{% if customer %}customer_id={{customer.id}}&customer_email={{customer.email}}{% endif %}'


        
        if (document.cookie.indexOf("discount_code=") >= 0) {
            //console.log('discount1');
            var discountCode = getCookie('discount_code');
            var checkout_url = 'https://checkout.calderalab.com/checkout?store=' + myshopify_domain + '&token=' + token + '&is_first_load=true' + '&discount=' + discountCode          
        }else{    
            //console.log('no discount');
            var checkout_url = 'https://checkout.calderalab.com/checkout?store=' + myshopify_domain + '&token=' + token + '&is_first_load=true'
        }  

        {% comment %} Refersion Tracking  {% endcomment %}
        var rfsnAidParam = localStorage.getItem('rfsn_aid')
        var rfsnCiParam = localStorage.getItem('rfsn_ci')
        var rfsnCsparam = localStorage.getItem('rfsn_cs')
        var rfsnCurrentCart = localStorage.getItem('current_rfsn_cart')

        if (rfsnAidParam) checkout_url += '&rfsn_aid=' + rfsnAidParam
        if (rfsnCiParam) checkout_url += '&rfsn_ci=' + rfsnCiParam
        if (rfsnCsparam) checkout_url += '&rfsn_cs=' + rfsnCsparam
        if (rfsnCurrentCart) checkout_url += '&current_rfsn_cart=' + rfsnCurrentCart

        upscribeBuildCheckout();


        $('.js-cart-checkout-btn').hide();
        $('.js-cart-checkout-recharge-btn').css('display' , 'inline-block');
        $('.js-cart-checkout-recharge-btn').attr('href' , checkout_url);
    }   

    var total;
    function getTotal(){
        const currency = '{{ cart.currency.symbol }}';
        const iso_code = '{{ cart.currency.iso_code }}';
        let additional = window.currencySymbolMap[iso_code] ? window.currencySymbolMap[iso_code].replaceAll(' ', '') : false;
        total = CartJS.cart.items.reduce((tc, item) => {
            const sa = item.properties["Subscription Amount"];
            if(sa){
                const sap = (parseFloat(item.properties["Subscription Amount"].replace(',', '.')) * 100) * item.quantity;
                tc += sap;
            }else{
                tc += item.line_price;
            }
            {% comment %}let interval = setTimeout(() => {
                let itemElements = document.querySelectorAll('div.c-cart__product[variant-id="'+item.id+'"]');
                if(itemElements && itemElements.length > 0) {
                    itemElements.forEach(itemElement => {
                        let itemName = itemElement.querySelector('.c-cart__itemName');
                        if(itemName && itemName.innerHTML.includes('Auto renew') && !itemName.innerHTML.includes('<span>Auto renew</span>')){
                            itemName.innerHTML = itemName.innerHTML.replace('Auto renew', '<span>Auto renew</span>');
                        }
                        let itemPrice = itemElement.querySelector('.c-cart__itemPrice');
                        let itemPriceValue = itemPrice.innerHTML;
                        let itemClearPrice = itemPriceValue.replace(currency, '').replace(iso_code, '').replace(' ', '').replace(',', '.');
                        if(additional){
                            itemClearPrice = itemClearPrice.replace(additional, '');
                        }
                        let itemPriceFormatted = Math.round(parseFloat(itemClearPrice));
                        itemPriceValue = itemPriceValue.replace(itemClearPrice, itemPriceFormatted).replace(iso_code, '');
                        itemPrice.innerHTML = itemPriceValue;
                        clearInterval(interval);
                    })
                }
            }, 1);{% endcomment %}

            return tc
        }, 0)
        total = total / 100;
        let formatTotal = formatPriceWithCurrency(total);
        formatTotal = formatTotal.replace('.00', '');
        /*
         if(currency === '€'){
            formatTotal = currency + Math.round(parseFloat(formatTotal.replace(currency, '')));
        }
        */
        $('#cart-subtotal').text(formatTotal)
        $('.cart__subtotal').text(formatTotal);    
        return total;
    }
    
    function upscribeItemPriceUpdate(e){
        $('.js-subscription-price').each(function(){
            if ($(this).attr('data-subscription-amount') === undefined || $(this).attr('data-cart-quantity') === undefined) {
                return console.error("Subscription amounts haven't been populated yet, bailing. If you see this error message, Upscribe may be broken.")
            }

            let subscriptionPrice = parseFloat($(this).attr('data-subscription-amount').replace(',', '.')) * 100;
            let totalQuantity = parseInt($(this).attr('data-cart-quantity'));
            let finalAmount = ((subscriptionPrice * totalQuantity)) / 100;
            finalAmount = finalAmount.toFixed(2);
            finalAmount = finalAmount.replace('.00', '');
            $(this).text(formatPriceWithCurrency(finalAmount))
        })
    }

    $(document).ready(function(){

        upscribeItemPriceUpdate()

        var allProducts = []
        var travelSize = "{{ travelSize }}"
        var travelID = '{{ travelProduct.variants[0].id }}' 
        var giftId = '{{ giftProduct.variants[0].id }}' 

        $('.c-cartDrawerOpt__box').on('click', function(){
            var productID = $(this).attr("data-id");
            $(this).toggleClass('is-active');
            if ($(this).hasClass("is-active")) {
                //console.log(productID, 'Add Item');
                CartJS.addItem(productID, 1);
                allProducts.push(productID);

            }else{
                //console.log(productID, 'Remove Item');
                CartJS.removeItemById(productID);
                $(this).removeClass('is-active');
                for(var i = allProducts.length - 1; i >= 0; i--) {
                    if(allProducts[i] === productID) {
                        allProducts.splice(i, 1);
                    }
                }
            }
        });

        $('.c-pdpATravel__select').click(function(){
           var ID = $(this).attr('data-id'); 
           $(this).toggleClass('is-active');
           if ($(this).hasClass("is-active")) {
                $.ajax({
                    type: 'POST',
                    url: '/cart/add.js',
                    data: {
                    quantity: 1,
                        id: $(this).attr('data-id')
                    },
                    dataType: 'json', 
                    success: function (data) { 
                        //console.log(data.quantity);
                    } 
                });
            }else{
                
                CartJS.removeItemById(ID);
            }
        });

        function checkCharacter(){
            if ( $(".c-cartDrawerNote").length ) {
                var maxLength = $('.c-cartDrawerNote textarea').attr('data-limit');
                var textlen = maxLength - $('.c-cartDrawerNote textarea').val().length;
                $('#cart-note-char').text(textlen);
                $('.c-cartDrawerNote textarea').attr('maxlength', maxLength);    
            }            
        }

        checkCharacter();

        $('.c-cartDrawerNote textarea').keyup(function() {
            checkCharacter();
        });

        function UpdateTotalPrice(){

                //console.log(allProducts);

                if ($('.js-subscription-price').length){
                    console.log('sub product')

                    /*var discountQuantity = 0
                    var discountAmount = $('.js-subscription-price').attr('data-subscription-amount')
                    var discountOriginalPrice= $('.js-subscription-price').attr('data-original-price')
                    var originalPrice = $('.c-cart__product').attr('data-original-price')
                    var originalPrice = 9700
                    var discountAmountBreak = discountAmount.replace('$', '');
                    var discountAmountFinal = discountAmountBreak.replace('.', '');*/

                    $( ".c-cart__product" ).each(function() {
                        if ($(this).find('.c-cart__subTime span').hasClass("js-subscription-price")) {
                            /*discountQuantity += parseInt($(this).find('.js-subscription-price').attr('data-cart-quantity'))

                            var qtyUpdate = $(this).find('.js-subscription-price').attr('data-cart-quantity')

                            productPrice = discountAmountFinal * qtyUpdate

                            var divideProductPrice = productPrice / 100
                            
                            var productTotalPrice = formatPriceWithCurrency(divideProductPrice)
                            
                            $(this).find('.js-subscription-price').text(productTotalPrice)
                            */
                            var maxlimitnumber =  $(this).find('.js-subscription-price').parents('.c-cart__itemInfoBox').find('.ajaxcart__qty-num').html();
                            
                            if(maxlimitnumber >= 2){
                                $(this).find('.js-subscription-price').closest('.c-cart__product').addClass('disable--quantity');
                                $(this).find('.js-subscription-price').parents('.c-cart__itemInfoBox').find('.js-limit-message').addClass("is-active");
                            }else{
                                $(this).find('.js-subscription-price').closest('.c-cart__product').removeClass('disable--quantity');
                                $(this).find('.js-subscription-price').parents('.c-cart__itemInfoBox').find('.js-limit-message').removeClass("is-active");
                            } 

                        }
                    });

                    //console.log(discountQuantity)
                    /* 
                    var calcAmount = originalPrice - discountAmountFinal
                    var finalcalcAmount = calcAmount * discountQuantity
                    var totalOriginalPrice = $('#cart-subtotal').attr('data-total-price')
                    var totalPrice = totalOriginalPrice - finalcalcAmount

                    var divideTotalPrice = totalPrice / 100
                    var finalTotalPrice = formatPriceWithCurrency(divideTotalPrice)
                    var discountCalcOriginalPrice = discountOriginalPrice - finalcalcAmount

                    $('[data-total-price]').text(finalTotalPrice);
                    */
                
                    $('.c-drawer__subscribeProduct').removeClass('is-active');
                    $('.c-drawer__subscribeProduct').hide();
                    $('.c-cart__additionalButtons').hide();
                    $('.js-cart-checkout-btn').hide();
                    $('.js-cart-checkout-recharge-btn').show();
                    $('.swell-mini-cart').hide();

                    $('.c-cartDrawerNote').hide();
                    $('.c-cartDrawerOpt').hide();

                    $('.c-cartDrawerMain').addClass('c-cartDrawerMain--sub');
                    $('.c-cartDrawerMain').removeClass('c-cartDrawerMain--one');

                    upscribeBuildCheckoutURL();

                } else if ($('.js-onetime-price').length){
                    console.log('One Time product')
                    $('.c-drawer__subscribeProduct').addClass('is-active');
                    $('.c-drawer__subscribeProduct').show();
                    $('.c-cart__additionalButtons').show();
                    $('.js-cart-checkout-btn').show();
                    $('.js-cart-checkout-recharge-btn').hide();
                    $('.swell-mini-cart').show();

                    $('.c-cartDrawerNote').show();
                    $('.c-cartDrawerOpt').show();

                    $('.c-cartDrawerMain').removeClass('c-cartDrawerMain--sub');
                    $('.c-cartDrawerMain').addClass('c-cartDrawerMain--one');


                    $( ".c-cart__product" ).each(function() {
                        var lineItemVariant = $(this).attr('variant-id');

                        //console.log(lineItemVariant);

                        if ( lineItemVariant  == giftId ){
                            $('.c-cartDrawerOpt__box').addClass('is-active')
                        }else{
                            if ($('.c-cartDrawerOpt__box').hasClass("is-active")) {
                               
                            }else{
                                $('.c-cartDrawerOpt__box').removeClass('is-active') 
                            }
                        }
                                          
                    });

                }

        }

        setTimeout(function () {
            if (travelSize == "false"){
                $( ".c-cart__product" ).each(function() {
                    var lineItemVariantID = $(this).attr('variant-id');
                    if (lineItemVariantID == travelID ){
                        CartJS.removeItemById(travelID);     
                    } 
                });
            }

            /*
            if (travelSize == "true"){
                $( ".c-cart__product" ).each(function() {
                    var lineItemVariantID = $(this).attr('variant-id');
                    if (lineItemVariantID != travelID ){
                        CartJS.addItem(travelID, 1)
                        console.log('test amrinder')
                        return false;
                    } 
                });
            }*/

            UpdateTotalPrice();

            $(document).on('cart.requestComplete', function(event, cart) {
                
                cartJSON = cart;
                
                console.log('Cart js request Complete');
                $('.c-drawer__subscribeBtn .c-interstitialDropDown').removeAttr("style");
                 
                if (!$(".c-interstitialModal").hasClass("modal--active")) {
                    cartDrawer.offcanvas('open');
                }

                UpdateTotalPrice();
                upscribeItemPriceUpdate();
                

                if(cart.item_count > 0){

                    if (travelSize == "true"){
                        if(!checkAvailable(cart.items, travelID, cart)){
                            CartJS.addItem(travelID, 1)
                        }
                    }

                    if(!checkAvailable(cart.items, giftId, cart)){
                        $('.c-cartDrawerOpt__box').removeClass('is-active')
                    }

                    if(checkProperties(cart.items, '1', cart)){
                        if(checkAvailable(cart.items, giftId, cart)){
                            CartJS.removeItemById(giftId);
                            $('.c-cartDrawerNote').hide();
                            $('.c-cartDrawerOpt').hide();
                            $('.c-cartDrawerOpt__box').removeClass('is-active');
                            return;
                        } 
                    }
                }

                if(cart.item_count == 1){
                    if(checkAvailable(cart.items, giftId, cart)){
                        CartJS.removeItemById(giftId);
                        $('.c-cartDrawerNote').hide();
                        $('.c-cartDrawerOpt').hide();
                        $('.c-cartDrawerOpt__box').removeClass('is-active');
                        return;    
                    }
                    if(checkAvailable(cart.items, travelID, cart)){
                        CartJS.removeItemById(travelID);
                        return;  
                    } 
                }
                if(cart.item_count == 2){
                     if(checkAvailable(cart.items, giftId, cart)){
                        if(checkAvailable(cart.items, travelID, cart)){
                            CartJS.removeItemById(giftId); 
                            CartJS.removeItemById(travelID);   
                        }
                     }
                }
                return;
            });
        }, 100);

        $('.js-modal-subscribe').on('click', function(){
            $(this).toggleClass('is-open');
            $(this).parent('.c-interstitialBtnArea').find('.js-modal-subscribe-dropdown').slideToggle();
        });

        $('.js-modal-subscribe-dropdown a').on('click', function(){
            $('.js-modal-subscribe-dropdown').hide();
            $('.js-modal-subscribe').removeClass('is-open');
            var subValue = $(this).attr('data-value');
            window.Modal.hide('interstitial-modal');
            {% assign cartJsProduct = all_products['the-good'] %}
            {% assign price = cartJsProduct.price %}
            {% assign calculated_discount = cartJsProduct.metafields.sf_upscribe.discount_amount | replace: '%', '' | divided_by: 100.0 %}
            {% assign takeOffAmount = price | times: calculated_discount %}
            {% assign price = price | minus: takeOffAmount %}
            CartJS.removeItemById({{ cartJsProduct.selected_or_first_available_variant }});

            CartJS.addItem({{ cartJsProduct.selected_or_first_available_variant }}, 1, {
                "Discount Amount": "{{ cartJsProduct.metafields.sf_upscribe.discount_amount }}",
                "Interval Frequency": "{{- cartJsProduct.metafields.sf_upscribe.interval_frequency -}}",
                "Interval Unit": "{{- cartJsProduct.metafields.sf_upscribe.interval_unit -}}",
                "Subscription": subValue ,
                "Subscription Amount": "{{- price | money_without_currency | remove: '.00' -}}",
                "Subscription Product Title": "{{- cartJsProduct.metafields.sf_upscribe.subscription_product_title -}}"
            });
            
            upscribeBuildCheckoutURL();
        });

        $('.js-check-cart-empty').on('click', function(){
            CartJS.addItem(21540829003834, 1);
            return false;
        });

        $(':button[id="AddToCart"]').on('click', function() { 
            if ($('input[name=purchase_type]:checked').val() == "autodeliver") {
                console.log('to check everything is working fine'); 
                setTimeout(function () {
                    var subscriptionCartValue = $('#cart-subtotal').text().replace(/[$,]/g, '');
                    console.log('Total Value' , subscriptionCartValue);
                    dataLayer.push({
                        'event': 'subscriptionAddToCart',
                        'subscriptionId': 'THEGOOD30MLKIT',
                        'subscriptionPrice':  '{{- product.variants[0].metafields.subscriptions.discount_variant_price | remove: '.00' -}}',
                        'subscriptionQuantity': '1',
                        'eventValue': subscriptionCartValue,
                    });  
                }, 2000);
            }
        });


    });

    

    $(document).on('cart.ready', function(event, cart) {
        getTotal();
    });

    $(document).on('cart.requestComplete', function() {
        getTotal();
        if(document.querySelector('.c-productInfo__btnText')){
            document.querySelector('.c-productInfo__btnText').textContent = "Add To Cart"
        }
    });



</script>


{% schema %}
  {
    "name": "Cart Drawer",
    "settings": [
        {
            "type":"checkbox",
            "id":"gift-wrap",
            "label":"Enable Add Gift Wrap",
            "default": false
        },
        {
            "type":"product",
            "id":"gift-product",
            "label":"Gift Product"
        },
        {
            "type":"text",
            "id":"gift-text",
            "label":"Gift Text",
            "default": "Add Gift Wrapping - $5"
        },
        {
            "type":"text",
            "id":"gift-text-additional",
            "label":"Additional Day Message",
            "default": "(Adds an additional day to shipping)"
        },
        {
            "type":"text",
            "id":"gift-textarea",
            "label":"Gift Textarea Label",
            "default": "Is this order a gift? Include a personal message."
        },
        {
            "type":"text",
            "id":"gift-character-limit",
            "label":"Gift Character Limit",
            "default": "140"
        },
        {
            "type":"text",
            "id":"gift-character-limit-text",
            "label":"Gift Character Limit Text",
            "default": "characters remaining. Emojis are not supported."
        },
        
        {
            "type":"text",
            "id":"bottom-bar",
            "label":"Bottom Bar Copy",
            "default": "Love it in 60 days or your money back."
        },
        {
            "type":"checkbox",
            "id":"travel-size",
            "label":"Enable Travel Size",
            "default": false
        },
        {
            "type":"product",
            "id":"travel-product",
            "label":"Travel Product"
        },
        {
            "type":"richtext",
            "id":"travel-copy",
            "label":"Travel Copy"
        }
    ]
  }
{% endschema %}